{
  "swagger": "2.0",
  "info": {
    "title": "proto/catalog/v1alpha1/catalog.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "CatalogService"
    },
    {
      "name": "EventService"
    },
    {
      "name": "LockService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1alpha1/catalog": {
      "get": {
        "operationId": "CatalogService_GetCatalog",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetCatalogResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "CatalogService"
        ]
      },
      "delete": {
        "operationId": "CatalogService_DeleteCatalog",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1DeleteCatalogResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "CatalogService"
        ]
      },
      "put": {
        "operationId": "CatalogService_CreateUpdateCatalog",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateUpdateCatalogResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateUpdateCatalogRequest"
            }
          }
        ],
        "tags": [
          "CatalogService"
        ]
      }
    },
    "/api/v1alpha1/catalogs/list": {
      "get": {
        "operationId": "CatalogService_ListCatalogs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListCatalogsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "CatalogService"
        ]
      }
    },
    "/api/v1alpha1/event": {
      "post": {
        "operationId": "EventService_CreateEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateEventRequest"
            }
          }
        ],
        "tags": [
          "EventService"
        ]
      },
      "put": {
        "operationId": "EventService_UpdateEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateEventRequest"
            }
          }
        ],
        "tags": [
          "EventService"
        ]
      }
    },
    "/api/v1alpha1/event/{id}": {
      "get": {
        "operationId": "EventService_GetEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EventService"
        ]
      },
      "delete": {
        "operationId": "EventService_DeleteEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1DeleteEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "slack_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "EventService"
        ]
      }
    },
    "/api/v1alpha1/events/list": {
      "get": {
        "operationId": "EventService_ListEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListEventsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "EventService"
        ]
      }
    },
    "/api/v1alpha1/events/search": {
      "get": {
        "operationId": "EventService_SearchEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1SearchEventsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "source",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "TYPE_UNSPECIFIED",
              "deployment",
              "operation",
              "drift",
              "incident"
            ],
            "default": "TYPE_UNSPECIFIED"
          },
          {
            "name": "priority",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "PRIORITY_UNSPECIFIED",
              "P1",
              "P2",
              "P3",
              "P4",
              "P5"
            ],
            "default": "PRIORITY_UNSPECIFIED"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "STATUS_UNSPECIFIED",
              "start",
              "failure",
              "success",
              "warning",
              "error",
              "snapshot",
              "user_update",
              "recommandation",
              "open",
              "close",
              "done"
            ],
            "default": "STATUS_UNSPECIFIED"
          },
          {
            "name": "service",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ENVIRONMENT_UNSPECIFIED",
              "development",
              "integration",
              "TNR",
              "UAT",
              "recette",
              "preproduction",
              "production",
              "mco"
            ],
            "default": "ENVIRONMENT_UNSPECIFIED"
          },
          {
            "name": "impact",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "slack_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "EventService"
        ]
      }
    },
    "/api/v1alpha1/events/today": {
      "get": {
        "operationId": "EventService_TodayEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1TodayEventsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "EventService"
        ]
      }
    },
    "/api/v1alpha1/lock": {
      "post": {
        "operationId": "LockService_CreateLock",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateLockResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateLockRequest"
            }
          }
        ],
        "tags": [
          "LockService"
        ]
      }
    },
    "/api/v1alpha1/lock/{id}": {
      "get": {
        "operationId": "LockService_GetLock",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetLockResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "LockService"
        ]
      }
    },
    "/api/v1alpha1/locks/list": {
      "get": {
        "operationId": "LockService_ListLocks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListLocksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "LockService"
        ]
      }
    },
    "/api/v1alpha1/unlock/{id}": {
      "get": {
        "operationId": "LockService_UnLock",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UnLockResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "LockService"
        ]
      }
    }
  },
  "definitions": {
    "eventv1alpha1Status": {
      "type": "string",
      "enum": [
        "STATUS_UNSPECIFIED",
        "start",
        "failure",
        "success",
        "warning",
        "error",
        "snapshot",
        "user_update",
        "recommandation",
        "open",
        "close",
        "done"
      ],
      "default": "STATUS_UNSPECIFIED"
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "trackercatalogv1alpha1Type": {
      "type": "string",
      "enum": [
        "TYPE_UNSPECIFIED",
        "module",
        "library",
        "workflow",
        "project",
        "chart",
        "package",
        "container"
      ],
      "default": "TYPE_UNSPECIFIED"
    },
    "trackereventv1alpha1Type": {
      "type": "string",
      "enum": [
        "TYPE_UNSPECIFIED",
        "deployment",
        "operation",
        "drift",
        "incident"
      ],
      "default": "TYPE_UNSPECIFIED"
    },
    "v1alpha1Catalog": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/trackercatalogv1alpha1Type"
        },
        "languages": {
          "$ref": "#/definitions/v1alpha1Languages"
        },
        "owner": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "repository": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1alpha1CreateEventRequest": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "attributes": {
          "$ref": "#/definitions/v1alpha1EventAttributes"
        },
        "links": {
          "$ref": "#/definitions/v1alpha1EventLinks"
        },
        "slack_id": {
          "type": "string"
        }
      }
    },
    "v1alpha1CreateEventResponse": {
      "type": "object",
      "properties": {
        "event": {
          "$ref": "#/definitions/v1alpha1Event"
        }
      }
    },
    "v1alpha1CreateLockRequest": {
      "type": "object",
      "properties": {
        "service": {
          "type": "string"
        },
        "who": {
          "type": "string"
        }
      }
    },
    "v1alpha1CreateLockResponse": {
      "type": "object",
      "properties": {
        "lock": {
          "$ref": "#/definitions/v1alpha1Lock"
        }
      }
    },
    "v1alpha1CreateUpdateCatalogRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/trackercatalogv1alpha1Type"
        },
        "languages": {
          "$ref": "#/definitions/v1alpha1Languages"
        },
        "owner": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "repository": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1alpha1CreateUpdateCatalogResponse": {
      "type": "object",
      "properties": {
        "catalog": {
          "$ref": "#/definitions/v1alpha1Catalog"
        }
      }
    },
    "v1alpha1DeleteCatalogResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1alpha1DeleteEventResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "slack_id": {
          "type": "string"
        }
      }
    },
    "v1alpha1Environment": {
      "type": "string",
      "enum": [
        "ENVIRONMENT_UNSPECIFIED",
        "development",
        "integration",
        "TNR",
        "UAT",
        "recette",
        "preproduction",
        "production",
        "mco"
      ],
      "default": "ENVIRONMENT_UNSPECIFIED"
    },
    "v1alpha1Event": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "attributes": {
          "$ref": "#/definitions/v1alpha1EventAttributes"
        },
        "links": {
          "$ref": "#/definitions/v1alpha1EventLinks"
        },
        "metadata": {
          "$ref": "#/definitions/v1alpha1EventMetadata"
        }
      }
    },
    "v1alpha1EventAttributes": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/trackereventv1alpha1Type"
        },
        "priority": {
          "$ref": "#/definitions/v1alpha1Priority"
        },
        "related_id": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/eventv1alpha1Status"
        },
        "environment": {
          "$ref": "#/definitions/v1alpha1Environment"
        },
        "impact": {
          "type": "boolean"
        },
        "start_date": {
          "type": "string",
          "format": "date-time"
        },
        "end_date": {
          "type": "string",
          "format": "date-time"
        },
        "owner": {
          "type": "string"
        },
        "stake_holders": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "notification": {
          "type": "boolean"
        },
        "notifications": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1alpha1EventLinks": {
      "type": "object",
      "properties": {
        "pull_request_link": {
          "type": "string"
        },
        "ticket": {
          "type": "string"
        }
      }
    },
    "v1alpha1EventMetadata": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "slack_id": {
          "type": "string"
        }
      }
    },
    "v1alpha1GetCatalogResponse": {
      "type": "object",
      "properties": {
        "catalog": {
          "$ref": "#/definitions/v1alpha1Catalog"
        }
      }
    },
    "v1alpha1GetEventResponse": {
      "type": "object",
      "properties": {
        "event": {
          "$ref": "#/definitions/v1alpha1Event"
        }
      }
    },
    "v1alpha1GetLockResponse": {
      "type": "object",
      "properties": {
        "lock": {
          "$ref": "#/definitions/v1alpha1Lock"
        }
      }
    },
    "v1alpha1Languages": {
      "type": "string",
      "enum": [
        "LANGUAGES_UNSPECIFIED",
        "golang",
        "kotlin",
        "java",
        "terraform",
        "helm",
        "javascript",
        "yaml",
        "docker",
        "python",
        "php",
        "rust",
        "typescript",
        "javascrypt",
        "groovy"
      ],
      "default": "LANGUAGES_UNSPECIFIED"
    },
    "v1alpha1ListCatalogsResponse": {
      "type": "object",
      "properties": {
        "catalogs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Catalog"
          }
        },
        "total_count": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v1alpha1ListEventsResponse": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Event"
          }
        },
        "total_count": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v1alpha1ListLocksResponse": {
      "type": "object",
      "properties": {
        "locks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Lock"
          }
        },
        "total_count": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v1alpha1Lock": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "who": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1alpha1Priority": {
      "type": "string",
      "enum": [
        "PRIORITY_UNSPECIFIED",
        "P1",
        "P2",
        "P3",
        "P4",
        "P5"
      ],
      "default": "PRIORITY_UNSPECIFIED"
    },
    "v1alpha1SearchEventsResponse": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Event"
          }
        },
        "total_count": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v1alpha1TodayEventsResponse": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Event"
          }
        },
        "total_count": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v1alpha1UnLockResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "count": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1alpha1UpdateEventRequest": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "attributes": {
          "$ref": "#/definitions/v1alpha1EventAttributes"
        },
        "links": {
          "$ref": "#/definitions/v1alpha1EventLinks"
        },
        "slack_id": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "v1alpha1UpdateEventResponse": {
      "type": "object",
      "properties": {
        "event": {
          "$ref": "#/definitions/v1alpha1Event"
        }
      }
    }
  }
}
